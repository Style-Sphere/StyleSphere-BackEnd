plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring-boot-starter-web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.4.3'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.4.3'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.3'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// mysql
	implementation 'com.mysql:mysql-connector-j:9.2.0'

	// springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
